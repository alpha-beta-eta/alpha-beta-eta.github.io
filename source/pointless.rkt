#lang racket
(provide pointless.html)
(require SMathML)
(define (Ω X)
  (app $Omega:normal X))
(define (closure X)
  (OverBar X))
(define $\\ (Mo "&Backslash;"))
(define-infix*
  (&\\ $\\))
(define |X\clo{x}|
  (&\\ $X (closure (setE $x))))
(define pointless.html
  (TnTmPrelude
   #:title "无点拓扑笔记"
   #:css "styles.css"
   (H1. "无点拓扑笔记")
   (H2. "空间和开集格")
   (P "我们的意图在于尽可能地忘掉关于空间的点的事情. "
      "转而, 我们想要与"
      (Q "places of non-trivial extent")
      "打交道.")
   (P "为了开始, 让我们想象由一个开集系统给出的一个标准拓扑空间. "
      "现在回忆一下经典Euclid几何, 其中我们将一条直线" $p
      "视为一个基本实体, 而不是与" $p "接触的那些点构成的集合, "
      "我们也要试着用类似的方式来看待我们的空间: "
      "将开集" $U "视为基本实体, 而坐落于" $U
      "之内的点视为另一种类型的实体, "
      "其以某种方式与" $U "接触.")
   ((comment)
    "实际上, 转而将一个点想成是一个由开集构成的集合是相当实际的, "
    "这个集合也就是由这个点的所有邻域构成的集合, "
    "我们可以将其想成是通过越来越小的spot来对于理想点进行近似.")
   (P "在这简短的一章里, 我们将会讨论这样的问题, "
      "即究竟从开集的抽象结构之中可以还原多少关于空间本身的信息. "
      "实际上, 对于很多空间 (例如" $T_1 "空间), 什么信息也不会丢失.")
   (P "让我们从现在开始进行约定, 从此往后, 默认"
      (Blockquote
       (Em "所有讨论的空间都是" $T_0 "的"))
      "不仅是本章, 整本书都是: "
      "这是容易理解的, 因为如果点不能以任何方式进行分离, "
      "那么我们就不可能基于对于开集的推理来还原点的差异.")
   ((notation)
    "整本书里, 一个空间" $X "的开集的(完全)格将会记作"
    (MB (Ω $X))
    "当然了, 这个约定并不会阻止我们偶尔使用这样的表达, "
    (Q "一个拓扑空间" (tu0 $X $tau)) ", 诸如此类.")
   (P "这个阶段所有我们想要告诉读者的东西都包含在第1-3节里了. "
      "第4节包含了关于某个特别的拓扑性质的一些技术性事实. "
      "我们在这里写下第4节的原因在于否则的话, "
      "这些事实就要散布于之后的文本里了, 尽管它们最好一起处理. "
      "暂时读者应该跳过第4节, 而在之后需要时本书肯定会回顾其内容.")
   (H3. "sober空间")
   (H4. "")
   (P "在开集格" (Ω $X) "之中, 具有形式"
      (MB |X\clo{x}|)
      "的元素具有以下性质:"
      (Blockquote
       "如果" (&sube (&cap $U $V) |X\clo{x}|)
       ", 那么" (&sube $U |X\clo{x}|) "或者"
       (&sube $V |X\clo{x}|)
       "成立. (的确如此, 我们不得不有"
       (&!in $x $U) "或者" (&!in $x $V)
       ", 比如说第一种情况成立, 那么"
       (∈ $x (&\\ $X $U)) ", 因而"
       (&sube (closure (setE $x)) (&\\ $X $U))
       ", 故" (&sube $U |X\clo{x}|) ".)"))
   (P "这通常被表述为它们是" (Em "meet不可归约的开集")
      " (而读者可以看出如果我们将交集视为某种乘法, "
      "那么这些开集表现得就像素数一样).")
   (P "一个空间" $X "被称为是sober的, 如果" (Ω $X)
      "之中没有除了" $X "之外的meet不可归约开集.")
   (H4. "注记")
   (P "Grothendieck所陈述的原始定义是基于闭集的语言表达的: "
      "一个(" $T_0 ")空间是sober的, 如果点闭包"
      (closure (setE $x)) "恰为" (Em "join不可归约闭集")
      ". 这种表述或许更加简单, 但是我们的兴趣在于开集格. "
      
      )
   ))