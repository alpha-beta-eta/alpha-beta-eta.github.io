#lang racket
(provide classical_ai.html)
(require SMathML)
(define classical_ai.html
  (TnTmPrelude
   #:title "古典AI笔记"
   #:css "styles.css"
   (H1. "古典AI笔记")
   (P "这里只是一些我的个人看法.")
   (H2. "古典AI是什么?")
   (P "这当然是很难回答的问题, 且因人而异. "
      "但是, 就我作为一个Lisper的体验而言, "
      "古典AI中最重要的是表达, "
      "尤其是表达人类的想法, "
      "而且是从人类的角度所看待的想法. "
      "因此, 对于编程语言和DSL的研究在古典AI领域占据着重要的地位. "
      "古典AI研究者总是希望创造新的表达方式, "
      "以使得原本不能表达的想法能够直接在编程语言中表达. "
      "最为典型的例子其实就是所谓的模式匹配, "
      "其可以用来方便地表达模式导向的程序, "
      "模式编码了很大一类的思想规则. "
      "如今新的编程语言也总是带有模式匹配的功能了.")
   (H2. "古典AI已死?")
   (P "其实, 实际情况可以用" (Q "古典AI已死, 古典AI万岁")
      "来形容. 在计算机科学发展的早期, "
      "计算机科学和AI几乎可以算是同义词. "
      "那时候, 符号积分都可以被视为一种重要的AI研究主题. "
      "诚然如此! 古典AI完全没有死去的迹象, "
      "只是很多原本被视为AI的东西, 现在已经不被普罗大众"
      "甚至是AI或者计算机科学研究者视为AI了. "
      "例如, 如今谁会觉得在图 (graph) 上搜索算是AI呢? "
      "这种分化的现象, 不是计算机科学所特有的, 每个领域都会出现.")
   (H2. "古典AI和Lisp")
   (P "如今经常能听到这样的言论, AI的本质是数学, 统计或者算法, "
      "和具体的编程语言毫无关系. 这在古典AI里是不成立的. "
      "可以使用Lisp直接表达的想法, 未必在其他语言中就容易写出. "
      "这不是可计算的问题 (绝大多数编程语言都是Turing完备的), 而是表达力的问题. "
      "Lisp能够成为古典AI的主流语言, 不仅是因为在当时没有那么多编程语言可供选择, "
      "更是因为它是能够方便表达语言的(元)语言. "
      "时至今日, Lisp系语言在此方面仍然独树一帜.")
   ((comment)
    "以下我列举一些由Lisp系语言编写的程序或者应用 "
    "(其中包括使用嵌入Lisp的语言写成的东西), 大多和AI有着或多或少的关联:"
    (Ol (Li "Zork (最初使用了一个叫做MDL的方言, 由Carl Hewitt和Gerald Sussman等人开发);")
        (Li "Grammarly的句法引擎;")
        (Li "DART (动态分析和重规划工具, Dynamic Analysis and Replanning Tool);")
        (Li "Stanford LCF;")
        (Li "SHRDLU;")
        (Li (A "Remote Agent" #:attr*
               '((href "https://ntrs.nasa.gov/api/citations/20000116204/downloads/20000116204.pdf")))
            " (用于Deep Space 1);")
        (Li "Macsyma/Maxima (最早的计算机代数系统之一, Maxima是Macsyma的开源版本);")
        (Li "Nqthm和ACL2;")
        (Li "...")))
   (H2. "古典AI和定理证明")
   (P "发现定理和证明定理往往被认为是人类智能的代表之一, 因而从一开始AI研究者就对于自动定理证明很感兴趣. "
      "最开始人们希望的是完全自动的定理证明和定理发现, 并寄希望于搜索, 然而很快研究者就发现这基本上算是死路一条. "
      "当然, 自动定理证明这个领域没有死亡 (曾经建立的技术也是如此, 例如归结原理), "
      "因为SAT/SMT求解器之类的东西仍然算是自动定理证明. "
      "然而, 对于通常意义上希望使用计算机探索数学的人们而言, "
      "他们的兴趣已经转向了证明助手 (proof assistant), 或者说计算机辅助证明.")
   (H2. "古典AI和游戏")
   (H2. "知识表示和定性推理")
   
   ))