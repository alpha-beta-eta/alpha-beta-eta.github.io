#lang racket
(provide elements_knopp.html)
(require SMathML)
(define LC
  (case-lambda
    ((a) a)
    ((a b) (&i* a b))
    ((a b . c*)
     (&+ (&i* a b) (apply LC c*)))))
(define elements_knopp.html
  (TmPrelude
   #:title "函数论基础"
   #:css "styles.css"
   (H1 "函数论基础")
   (P "此书是Knopp所写的简明扼要的复变函数引论.")
   (H2 "第1部分 复数及其几何表示")
   (H3 "第1章 基础")
   (H4 "第1节 引论")
   (H4 "第2节 实数系")
   (H4 "第3节 平面的点和向量")
   (H3 "第2章 复数系和高斯平面")
   (H4 "第4节 历史注记")
   (H4 "第5节 复数系介绍; 记号")
   (H4 "第6节 等式和不等式")
   (H4 "第7节 加法和减法")
   (H4 "第8节 乘法和除法")
   (H4 "第9节 衍生规则; 幂")
   (H4 "第10节 作为实数系扩张的复数系")
   (H4 "第11节 复数的三角表示")
   (H4 "第12节 乘法和除法的几何表示")
   (H4 "第13节 不等式和绝对值; 例子")
   (H3 "第3章 黎曼球面")
   (H4 "第14节 球极平面投影")
   (H4 "第15节 数字的黎曼球面; 点" $inf "; 例子")
   (H2 "第2部分 线性函数和循环变换")
   (H3 "第4章 根据线性函数得到的映射")
   (H4 "第16节 根据整线性函数 (entire linear function) 得到的映射")
   (P "函数的概念将在第4部分更加密集地占据着我们的身心. "
      "我们所言称的" (Em "函数") ", 指的是对于每个复数" $z
      ", 设法根据某种规则, 与一个新的复数" $w "对应起来. "
      "本节我们只处理一种非常简单的对应关系: 如果"
      (&cm $a $b $c $d) "是给定的复数, 那么对于每个值" $z
      ", 可以对应于值"
      (MB (&= $w (~ (LC $a $z $b) (LC $c $z $d))) ".")
      "这种情况下, 我们所说的是一个" (Em "线性函数")
      ". 在实域上, 一个函数" (&= $y (app $f $x))
      "的行为可以通过画图展现, 这里的画图指的是在" (: $x $y)
      "-平面上画出以" (&= $y (app $f $x)) "为方程的相应曲线. "
      "在复域上, 则需要" (Em "两个") "平面. 一个平面是"
      (Em $z "-平面") ", 我们画的是独立变量" $z
      "的值. "
      )
   (H2 "第3部分 集合和序列; 幂级数")
   (H2 "第4部分 解析函数和共形映射")
   (H2 "第5部分 初等函数")
   ))